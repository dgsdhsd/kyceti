#include<iostream>
#include<math.h>
#include<cstdio>
#include<string.h>
#include<cstdlib>
#include<time.h>

using namespace std;

typedef struct lianbiao {        //链表结构初步完成 
	int num;
	lianbiao* next;           //1.这里必须使用lianbiao  
}ss,*mm;                           //2.这里采用*mm，而不是mm* 
mm head=NULL;
mm rear=NULL;
char bc[1000];
int shuru  (int sum){
	int i,j,k;
	ss p;
	p.num=1;  
	cout<<'P';
	head->next=p;                                 //P好像未赋值的原因 
	for(i=1;i<sum;i++){
		mm q;            //这里好像是没问题，不清楚 
		p->next=q;
		q->num=i+1;
		p=q;
	}
	rear->next=p;
	p->next=head->next;             
	return 0;
}
/*int dele(mm p,mm q){
	if(head->next==rear->next)  return 1;
	q->next=p->next;
	if(head->next==p)
	head->next=p->next;
	if(rear->next==p)
	rear->next=q;
	return 0;
}
int shuchu(int sum,int x){
	int i,j,k;
	int step=0; 
	mm p=head->next;
	mm q;
	int times=sum/x;                                    //这里应该有向上取整的算法 
	if(sum%x!=0)  times+=1;
	for(i=0;i<times;i++){
		cout<<"你的第"<<i+1<<"套题"; 
	//	int *l=(int*)malloc(sizeof(int)*x);
		for(j=0;j<x;j++){
			step=rand()%sum+1;
			for(k=0;k<step;k++){
			q=p;        p=p->next;
		}
		    cout<<p->num<<':'<<bc[p->num]<<"    ";
		    
			if(dele(p,q)) break;
		}	
	}
	
	
	
}*/
int main(){
	int i,j,k;
	int mum;
	int sum;
	freopen("启用调试1.txt","r",stdin);
//	freopen("启用输出1.txt","w",stdout);
	srand (time(NULL));
	cin>>bc; 
	sum=sizeof(bc);
	shuru(sum);                   //序列号排列 
	cout<<'Q';
//	shuchu(sum,25);
	
	
}


















开头

/*int dele(mm p,mm q){
	if(head->next==rear->next)return 1;
	q->next=p->next;
	if(head->next==p)
	head->next=p->next;
	if(rear->next==p)
	rear->next=q;
	return 0;
}
int shuchu(int sum,int x){}*
	int i,j,k;
//	int step=0; 
	mm p=(mm)malloc(sizeof(ss));
    mm q=(mm)malloc(sizeof(ss));
	p=head->next; 
	if(sum%x!=0)  times+=1;
	for(i=0;i<times;i++){
		cout<<"你的第"<<i+1<<"套题"; 
	//	int *l=(int*)malloc(sizeof(int)*x);
		for(j=0;j<x;j++){
			step=rand()%90+1;
			cout<<step<<'\n';
			for(k=0;k<step;k++){
				cout<<p->num<<'\n'; 
			q=p;        p=p->next;
		}
		    cout<<p->num<<':'<<bc[p->num+1];
		    
			if(dele(p,q)) break;
		}	
	}
	
	
	
}*/




















int control2(MYSQL* sock, char* name) {                              //负责输入选项
	char num[100] = "create table ! like xuanxiang";
	char zz[100] = "insert into ! values(0,'*')";
	char mum[100];
	char p;
	int suspend;
	int i, j, k;
	j = 0;
	for (i = 0; num[i] != '\0'; i++) {
		if (num[i] != '!')mum[j++] = num[i];
		else 
			for (k = 0; name[k] != '\0'; k++)
				mum[j++] = name[k];
	}
	mum[j] = '\0';
	if (!mysql_query(sock, mum))                      //创建一个specialXX 表
		cout << "!" << endl;
	else cout << "flase" << endl;



	j = 0;
	for (i = 0; zz[i] != '\0'; i++) {                                  //这里算法真应该优化，有点繁杂
		if (zz[i] != '!')mum[j++] = zz[i];
		else 
			for (k = 0; name[k] != '\0'; k++)
				mum[j++] = name[k];
	}
	mum[j] = '\0';
	for (suspend = 0; mum[suspend] != '*'; suspend++);
	cout << "please input the truth ";
	for (i = 1;; i++) {
		cout << i << ':';
		cin >> p;
		if (p == 'S') break;
		mum[suspend] = p;
		for (j = 0; mum[j] != '\0'; j++)
			cout << mum[j];
		if (!mysql_query(sock, mum))
			cout << "true" << endl;
		else cout << "flase" << endl;
		cout << '\n';

	}


	return 0;
}